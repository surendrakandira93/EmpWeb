@model SignupDto
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>WorkWise Html Template</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <link rel="stylesheet" type="text/css" href="/css/animate.css">
    <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/css/line-awesome.css">
    <link rel="stylesheet" type="text/css" href="/css/line-awesome-font-awesome.min.css">
    <link href="/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/lib/slick/slick.css">
    <link rel="stylesheet" type="text/css" href="/lib/slick/slick-theme.css">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="/css/responsive.css">
    <link rel="stylesheet" href="~/plugins/toastr/toastr.min.css" />
    <link href="~/plugins/waitMe/waitMe.min.css" rel="stylesheet" />
    <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.css" />
    

    <style>
        .field-validation-error {
            color: red;
        }

        .validation-summary-errors {
            color: red;
        }

        .error {
            color: red;
        }
    </style>
</head>


<body class="sign-in">


    <div class="wrapper">

        <div class="sign-in-page">
            <div class="signin-popup">
                <div class="signin-pop">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="cmp-info">
                                <div class="cm-logo">
                                    <img src="images/cm-logo.png" alt="">
                                    <p>Workwise,  is a global freelancing platform and social networking where businesses and independent professionals connect and collaborate remotely</p>
                                </div><!--cm-logo end-->
                                <img src="images/cm-main-img.png" alt="">
                            </div><!--cmp-info end-->
                        </div>
                        <div class="col-lg-6">
                            <div class="login-sec">
                                <ul class="sign-control">
                                    <li data-tab="tab-1" class="current"><a href="#" title="">Sign in</a></li>
                                    <li data-tab="tab-2"><a href="#" title="">Sign up</a></li>
                                </ul>
                                <div class="sign_in_sec current" id="tab-1">

                                    <h3>Sign in</h3>
                                    <form asp-action="index" asp-controller="account" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" autocomplete="off" id="account_login">
                                        <div id="validation-summary"></div>
                                        <div class="row">
                                            <div class="col-lg-12 no-pdd">
                                                <div class="sn-field">
                                                    <input type="text" name="UserName" placeholder="UserName" data-msg-required="*required" data-rule-required="true">
                                                    <i class="la la-user"></i>
                                                </div><!--sn-field end-->
                                            </div>
                                            <div class="col-lg-12 no-pdd">
                                                <div class="sn-field">
                                                    <input type="password" name="Password" placeholder="Password" data-msg-required="*required" data-rule-required="true">
                                                    <i class="la la-lock"></i>
                                                </div>
                                            </div>
                                            <div class="col-lg-12 no-pdd">
                                                <div class="checky-sec">
                                                    <div class="fgt-sec">
                                                        <input type="checkbox" name="IsPersistent" id="IsPersistent">
                                                        <label for="IsPersistent">
                                                            <span></span>
                                                        </label>
                                                        <small>Remember me</small>
                                                    </div><!--fgt-sec end-->
                                                    @*<a href="#" title="">Forgot Password?</a>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-12 no-pdd">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" value="submit">Sign in</button>
                                            </div>

                                            <div class="col-lg-12 no-pdd">
                                                <button type="button" id="btn_google">Google</button>
                                                <button type="button" id="btn_facebook">Facebook</button>
                                                <button type="button" id="btn_twitter">Twitter</button>
                                                <button type="button" id="btn_signout">Signout</button>
                                            </div>
                                        </div>
                                    </form>
                                    @* <div class="login-resources">
                                        <h4>Login Via Social Account</h4>
                                        <ul>
                                        <li><a href="#" title="" class="fb"><i class="fa fa-facebook"></i>Login Via Facebook</a></li>
                                        <li><a href="#" title="" class="tw"><i class="fa fa-twitter"></i>Login Via Twitter</a></li>
                                        </ul>
                                        </div><!--login-resources end-->*@
                                </div><!--sign_in_sec end-->
                                <div class="sign_in_sec" id="tab-2">
                                    @*<div class="signup-tab">
                                        <i class="fa fa-long-arrow-left"></i>
                                        <h2>johndoe@example.com</h2>
                                        <ul>
                                        <li data-tab="tab-3" class="current"><a href="#" title="">User</a></li>
                                        <li data-tab="tab-4"><a href="#" title="">Company</a></li>
                                        </ul>
                                        </div>*@
                                    <!--signup-tab end-->
                                    <div class="dff-tab current" id="tab-3">
                                        <h3>Sign up</h3>
                                        <form asp-action="Signup" asp-controller="account" method="post" autocomplete="off" id="account_signup">
                                            <div id="validation-summary"></div>
                                            <div class="row">
                                                <div class="col-lg-12 no-pdd">
                                                    <div class="sn-field">
                                                        <input type="text" asp-for="Email" placeholder="User Name/Email" data-msg-required="*required" data-rule-required="true">
                                                        <i class="la fa-envelope"></i>
                                                    </div>

                                                </div>
                                                <div class="col-lg-12 no-pdd">
                                                    <div class="sn-field">
                                                        <input type="text" asp-for="Name" placeholder="Full Name" data-msg-required="*required" data-rule-required="true">
                                                        <i class="la la-user"></i>
                                                    </div>
                                                </div>

                                                <div class="col-lg-12 no-pdd">
                                                    <div class="sn-field">
                                                        <input type="date" asp-for="DateOfBrith" placeholder="Date Of Brith" data-msg-required="*required" data-rule-required="true">
                                                        <i class="la fa-birthday-cake"></i>
                                                    </div>
                                                </div>


                                                <div class="col-lg-12 no-pdd">
                                                    <div class="sn-field">
                                                        <input type="password" asp-for="Password" placeholder="Password" data-msg-required="*required" data-rule-required="true">
                                                        <i class="la la-lock"></i>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 no-pdd">
                                                    <div class="sn-field">
                                                        <input type="password" asp-for="ConfirmPassword" placeholder="Repeat Password" data-msg-required="*required" data-rule-required="true">
                                                        <i class="la la-lock"></i>
                                                        <label id="ConfirmPassword_error" class="error" for="ConfirmPassword" style="display:none;">Confirm Password not matched with Password</label>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12 no-pdd">
                                                    <button type="submit" value="submit">Get Started</button>
                                                </div>
                                            </div>
                                        </form>
                                    </div><!--dff-tab end-->
                                    <!--dff-tab end-->
                                </div>
                            </div><!--login-sec end-->
                        </div>
                    </div>
                </div><!--signin-pop end-->
            </div><!--signin-popup end-->
            <div class="footy-sec">
                <div class="container">
                    <ul>
                        <li><a href="help-center.html" title="">Help Center</a></li>
                        <li><a href="about.html" title="">About</a></li>
                        <li><a href="#" title="">Privacy Policy</a></li>
                        <li><a href="#" title="">Community Guidelines</a></li>
                        <li><a href="#" title="">Cookies Policy</a></li>
                        <li><a href="#" title="">Career</a></li>
                        <li><a href="forum.html" title="">Forum</a></li>
                        <li><a href="#" title="">Language</a></li>
                        <li><a href="#" title="">Copyright Policy</a></li>
                    </ul>
                    <p><img src="images/copy-icon.png" alt="">Copyright 2022</p>
                </div>
            </div>
        </div><!--sign-in-page end-->


    </div><!--theme-layout end-->



    <script type="text/javascript" src="/js/jquery.min.js"></script>
    <script type="text/javascript" src="/js/popper.js"></script>
    <script type="text/javascript" src="/js/bootstrap.min.js"></script>
    <script src="/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="/lib/slick/slick.min.js"></script>
    <script type="text/javascript" src="/js/script.js"></script>
    <script src="~/plugins/toastr/toastr.min.js" asp-append-version="true"></script>
    <script src="/plugins/waitMe/waitMe.min.js"></script>
    <script src="/js/global.js" asp-append-version="true"></script>
    <script src="/js/Custom/Login.js" asp-append-version="true"></script>
    <script src="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.js"></script>
    <script src="bower_components/firebaseui/dist/firebaseui.js"></script>

    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
        import { getAuth, signOut , signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, TwitterAuthProvider } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-auth.js";
        import { getFirestore, collection, addDoc } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-firestore.js";


        const firebaseConfig = {
            apiKey: "AIzaSyDzZ6uwr469KAgQeW2GFqSYxykj3Zmag8U",
            authDomain: "common-auth-core5.firebaseapp.com",
            projectId: "common-auth-core5",
            storageBucket: "common-auth-core5.appspot.com",
            messagingSenderId: "1090645954986",
            appId: "1:1090645954986:web:0d7baf37df828d24809bd3",
            measurementId: "G-1JWVS73CPN"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);

        const auth = getAuth();

        $("#btn_google").on('click', function () {
            const provider = new GoogleAuthProvider();
            signInWithPopup(auth, provider)
                .then((result) => {
                    // This gives you a Google Access Token. You can use it to access the Google API.
                    const credential = GoogleAuthProvider.credentialFromResult(result);
                    const token = credential.accessToken;
                    // The signed-in user info.
                    const user = result.user;
                    console.log(result);                    
                    StoreTokenInDB(user.displayName, user.email, user.phoneNumber, user.accessToken, user.uid, user.photoURL);                    
                }).catch((error) => {

                    // Handle Errors here.
                    const errorCode = error.code;
                    const errorMessage = error.message;
                    // The email of the user's account used.
                    const email = error.email;
                    // The AuthCredential type that was used.
                    const credential = GoogleAuthProvider.credentialFromError(error);
                    // ...
                    signOut();
                });
        })

        function StoreTokenInDB(name, email, phone, token, uid, photoURL) {

            try {                
                const docRef = addDoc(collection(db, "users"), {
                    uid: uid,
                    name: name,
                    email: email,
                    phone: phone,
                    photoURL: photoURL,
                    timestamp: new Date(),
                    token: [{
                        id: uniqueId(),
                        token: token,
                        timestamp: new Date()
                    }]
                });
                console.log("Document written with ID: ", docRef.id);
            } catch (e) {
                console.error("Error adding document: ", e);
            }
        }

        $("#btn_facebook").on('click', function () {
            const provider = new FacebookAuthProvider();
            
            signInWithPopup(auth, provider)
                .then((result) => {
                    // The signed-in user info.
                    const user = result.user;

                    // This gives you a Facebook Access Token. You can use it to access the Facebook API.
                    const credential = FacebookAuthProvider.credentialFromResult(result);
                    const accessToken = credential.accessToken;
                    console.log(result);
                    debugger;
                    StoreTokenInDB(user.displayName, user.email, user.phoneNumber, user.accessToken, user.uid, user.photoURL);
                    // ...
                })
                .catch((error) => {
                    // Handle Errors here.
                    const errorCode = error.code;
                    const errorMessage = error.message;
                    debugger;
                    // The email of the user's account used.
                    const email = error.email;
                    // The AuthCredential type that was used.
                    const credential = FacebookAuthProvider.credentialFromError(error);

                    signOut();
                });
        })

        $("#btn_twitter").on('click', function () {
            const provider = new TwitterAuthProvider();
            signInWithPopup(auth, provider)
                .then((result) => {
                    // This gives you a the Twitter OAuth 1.0 Access Token and Secret.
                    // You can use these server side with your app's credentials to access the Twitter API.
                    const credential = TwitterAuthProvider.credentialFromResult(result);
                    const token = credential.accessToken;
                    const secret = credential.secret;
                    // The signed-in user info.
                    const user = result.user;

                }).catch((error) => {
                    debugger;
                    
                    // Handle Errors here.
                    const errorCode = error.code;
                    const errorMessage = error.message;
                    // The email of the user's account used.
                    const email = error.email;
                    // The AuthCredential type that was used.
                    const credential = TwitterAuthProvider.credentialFromError(error);
                    // ...
                    signOut();
                })
        })

        $("#btn_signout").on('click', function () {
            signOut();
        });

        const uniqueId = (length = 16) => {
            return parseInt(Math.ceil(Math.random() * Date.now()).toPrecision(length).toString().replace(".", ""))
        }

        function signOut() {

            signOut(auth).then(() => {
                // Sign-out successful.
            }).catch((error) => {
                // An error happened.
            });
        }
    </script>
    @{
        var model = ViewData["NotificationModel"] as Notification;
        if (model == null)
        {
            if (TempData["NotificationModel"] != null)
            {

                model = Newtonsoft.Json.JsonConvert.DeserializeObject<Notification>(TempData["NotificationModel"].ToString());
            }
        }
    }

    @if (model != null)
    {

        <script>
            $(document).ready(function () {
                if ('@(model.Type.ToString().ToLower())' == 'success') {
                    Global.ToastrSuccess('@(model.Message)');
                } else if ('@(model.Type.ToString().ToLower())' == 'danger') {
                    Global.ToastrError('@(model.Message)');
                }
                else if ('@(model.Type.ToString().ToLower())' == 'warning') {
                    Global.ToastrWarning('@(model.Message)');
                } else  {
                    Global.ToastrInfo('@(model.Message)');
                }
            });

        </script>
    }

</body>
</html>